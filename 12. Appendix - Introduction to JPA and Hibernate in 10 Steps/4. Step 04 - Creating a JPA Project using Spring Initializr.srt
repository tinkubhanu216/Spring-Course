1
00:00:01,440 --> 00:00:02,230
Welcome back.

2
00:00:02,430 --> 00:00:05,010
It's time to get our hands dirty. In this step,

3
00:00:05,040 --> 00:00:11,100
we’ll create a simple project using Spring boot. We will use something called Spring initialiser. Spring initializer

4
00:00:11,110 --> 00:00:14,050
is very useful to create your Spring Boot projects

5
00:00:14,100 --> 00:00:19,410
very quickly. We would want to use maven, so I'll use maven project. Language is Java and I would use

6
00:00:19,940 --> 00:00:22,200
a Spring boot version of 2.0.0 snap shot.

7
00:00:22,200 --> 00:00:25,590
I think any of the version which I greater than 2.0.0 should be fine.

8
00:00:25,620 --> 00:00:30,970
So you can just go ahead and choose snapshot or any higher version of 2.0.0. That should be cool.

9
00:00:31,200 --> 00:00:38,970
And I would want to use the group com int28minutes learning JPA and let's use the artifact Id JPA

10
00:00:39,030 --> 00:00:41,040
in ten steps.

11
00:00:41,310 --> 00:00:45,360
One of the things that you would need to choose when you start creating a Spring Boot project is what

12
00:00:45,360 --> 00:00:46,800
dependencies you would want.

13
00:00:46,800 --> 00:00:49,540
What starter  projects you would want to use.

14
00:00:49,550 --> 00:00:53,790
Lets add in the web because at a later point we want to add REST services.

15
00:00:53,790 --> 00:00:57,070
So lets add in web and we would want to use JPA.

16
00:00:57,090 --> 00:00:58,340
So I’ll write

17
00:00:58,380 --> 00:01:05,750
JPA in here and press enter and the other thing which we want to do in this specific example is use the

18
00:01:05,880 --> 00:01:13,390
in memory database. In-memory database provides you a lot of advantages compared to installing a realtime

19
00:01:13,410 --> 00:01:14,170
database.

20
00:01:14,250 --> 00:01:17,560
We'll discuss a lot about in memory database as we go on.

21
00:01:17,580 --> 00:01:21,980
So we'll add a in memory database. In-memory database we are going to use is H2.

22
00:01:21,990 --> 00:01:23,910
So I'm adding H2.

23
00:01:24,150 --> 00:01:28,960
We chose Maven, language is Java. Any version greater than 2.0.0

24
00:01:28,960 --> 00:01:30,120
of Spring boot should be fine.

25
00:01:30,120 --> 00:01:35,250
And we gave a group idea of in 28 minutes learning JPA com in 28 minutes learning JPA and use an

26
00:01:35,250 --> 00:01:37,850
artifact of GPA in 10 steps.

27
00:01:37,850 --> 00:01:43,950
We chose web JPA and H2 as the dependencies and we are ready to create a project now.

28
00:01:43,980 --> 00:01:46,110
So just click generate project.

29
00:01:46,110 --> 00:01:47,390
This would download a zip.

30
00:01:47,460 --> 00:01:54,270
You can unzip the zip to some folder on your hard disk and open up your eclipse. I am clicking generate project.

31
00:01:54,270 --> 00:01:56,920
This would download a zip into my local machine.

32
00:01:56,940 --> 00:02:02,610
I've opened up eclipse and am ready to import the project int. So I would need to say file import existing

33
00:02:03,270 --> 00:02:04,230
maven projects.

34
00:02:04,230 --> 00:02:11,040
Actually I want to use existing maven projects and say Next. I've copied the folder where I have copied

35
00:02:11,040 --> 00:02:12,100
the zip file to.

36
00:02:12,210 --> 00:02:15,750
I've extracted my zip file to this folder called JPA in 10 steps.

37
00:02:15,760 --> 00:02:18,870
So I just need to copy that folder in here.

38
00:02:19,050 --> 00:02:24,230
Or you can even browse to it. So you can click Browse and browse to the folder.

39
00:02:24,390 --> 00:02:27,080
Ok! I’ve done that and you can see a project coming up in here.

40
00:02:27,090 --> 00:02:33,490
So this has our group Id and our artifact Id. so JPA in ten steps and we use the group id com in 28 minutes 

41
00:02:33,710 --> 00:02:34,620
learning JPA.

42
00:02:34,650 --> 00:02:42,120
I can click Finish. When you click Finish, what Maven does is it would start to download all the Maven dependencies. Inside

43
00:02:42,770 --> 00:02:43,930
our dependencies,

44
00:02:43,950 --> 00:02:50,850
we have chosen web JPA and H2. The web and JPA are actually starter projects. Spring Boot starter web and Spring Boot

45
00:02:50,850 --> 00:02:52,850
starter JPA.

46
00:02:53,310 --> 00:02:54,360
This would…Spring Boot starter

47
00:02:54,360 --> 00:02:56,350
web would help us develop web applications.

48
00:02:56,350 --> 00:03:00,500
JPA would help us develop JPA based stuff.

49
00:03:00,500 --> 00:03:05,400
There are a lot of dependencies that Spring would need to be able to set these up. What is happening in the

50
00:03:05,400 --> 00:03:10,920
background right now is all these dependencies would get downloaded and the project would be created.

51
00:03:10,920 --> 00:03:16,110
This may take a few a minute so be patient and once the entire thing is set up you'd be able to see

52
00:03:16,110 --> 00:03:18,030
simple things like this. So you should see a source

53
00:03:18,040 --> 00:03:20,450
main Java with a simple application file in here.

54
00:03:20,450 --> 00:03:25,560
Source main resources application dot properties and you should source test java with a simple

55
00:03:25,560 --> 00:03:26,910
test which is present in here.

56
00:03:26,940 --> 00:03:29,850
You can see if you open up the Maven dependencies,

57
00:03:29,850 --> 00:03:33,730
there are a lot of Maven dependencies which are present in here.

58
00:03:33,870 --> 00:03:38,580
The most important dependencies as far as the hibernate and JPA are concerned are

59
00:03:38,610 --> 00:03:43,890
hibernate JPA API and the hibernate core 5.2.10 final dot jar.

60
00:03:43,980 --> 00:03:49,290
These are highlighted in the screen right now. One of the questions frequently in the minds of people

61
00:03:49,290 --> 00:03:56,830
who are beginning to learn JPA is… how.. what is the relation between JPA and hibernate. JPA is a interface

62
00:03:56,940 --> 00:04:04,470
JPA is a specification. Hibernate implements JPA. It's like you have an interface and you have classes

63
00:04:04,500 --> 00:04:12,070
implementing that interface. Similar to that JPA is an interface and hibernate is an implementation.

64
00:04:12,090 --> 00:04:14,080
JPA defines all the annotations.

65
00:04:14,080 --> 00:04:16,380
So these are the different annotations which you can use.

66
00:04:16,380 --> 00:04:19,650
These are the different things you can use to define criteria queries.

67
00:04:19,690 --> 00:04:23,070
These are the different things that you can use to define attributes.

68
00:04:23,100 --> 00:04:28,070
That's what JPA defines and hibernate provides implementations to

69
00:04:28,080 --> 00:04:36,660
all these concepts. Once you map an object, once you put all the annotations on a class, hibernate would

70
00:04:36,660 --> 00:04:42,390
be able to read them, understand them and would be able to save your entities to the table.

71
00:04:42,480 --> 00:04:47,710
Hibernate is one of the most popular ORM frameworks.  ORM is object relational mapping and JPA

72
00:04:47,710 --> 00:04:51,100
standardizes ORM. So JPA says, 

73
00:04:51,120 --> 00:04:53,390
Okay! This is the way we should do ORM.

74
00:04:53,400 --> 00:04:57,570
This is the way you should define mappings between objects and tables.

75
00:04:57,600 --> 00:04:59,500
What does JPA do? It says,

76
00:04:59,550 --> 00:05:04,410
OK! This is the way you define entities, this is the way you map attribute, this is the way you map relationship

77
00:05:04,410 --> 00:05:07,740
between entities and this is the way you manage the different entities.

78
00:05:07,740 --> 00:05:09,460
That's basically what JPA does.

79
00:05:09,490 --> 00:05:11,970
Hibernate is the implementation.

80
00:05:12,000 --> 00:05:15,580
Whatever JPA a defines, hibernate implements it.

81
00:05:15,630 --> 00:05:18,630
Let's get back to what we were doing. We were setting up a simple project.

82
00:05:18,630 --> 00:05:21,460
So let's start this and see if it starts up fine.

83
00:05:21,460 --> 00:05:27,270
So the way I can execute it is by saying right click, run as Java application and you see that the application

84
00:05:27,270 --> 00:05:28,830
would start up.

85
00:05:28,880 --> 00:05:31,570
We've not really defined any entities as of now.

86
00:05:31,590 --> 00:05:32,140
We’ve have not really

87
00:05:32,150 --> 00:05:33,090
mapped anything.

88
00:05:33,090 --> 00:05:35,760
We have not created any tables or anything of that kind.

89
00:05:35,760 --> 00:05:39,670
For now let's just start the application.  It should not do anything right now.

90
00:05:39,720 --> 00:05:44,670
The application starts up you can see that in here. We are using Tomcat as the server because that's

91
00:05:44,670 --> 00:05:51,170
the embedded Tomcat which comes in built it with Spring Boot starter web. And we see that the application

92
00:05:51,170 --> 00:05:52,340
has started up.

93
00:05:52,380 --> 00:05:56,090
What we’ll do in the next step is we would start adding more features.

94
00:05:56,100 --> 00:05:59,740
We will start adding entities and try mapping them to tables.

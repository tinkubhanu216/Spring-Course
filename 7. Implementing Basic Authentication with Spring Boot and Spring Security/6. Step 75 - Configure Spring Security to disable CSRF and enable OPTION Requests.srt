0
1
00:00:02,060 --> 00:00:09,860
Welcome back. In the previous step, we saw that when we added authorization headers to our request, what
1

2
00:00:09,860 --> 00:00:17,600
was happening was something called an option is aded.  method request was being saved before the GET request
2

3
00:00:17,900 --> 00:00:19,830
for that is what happened.
3

4
00:00:19,850 --> 00:00:26,720
What happens is whenever you add authorization credentials on a GET request, or a POST request, what
4

5
00:00:26,720 --> 00:00:30,150
happens is a preflight request.
5

6
00:00:30,180 --> 00:00:37,970
So before sending the complete request, what happens is a request call options request is sent to check
6

7
00:00:38,180 --> 00:00:40,230
if you have the right permissions.
7

8
00:00:40,400 --> 00:00:46,110
And what is happening is that options request is being denied right now.
8

9
00:00:46,290 --> 00:00:48,800
What we'll do in this step, is we'll fix this.
9

10
00:00:48,800 --> 00:00:56,120
The other thing which will be working on this specific step, is something called C S R F.  cross-site request
10

11
00:00:56,240 --> 00:00:57,090
format.
11

12
00:00:57,200 --> 00:01:06,070
Let's start with focusing on how to configure it with spring security. Let's open up control.
12

13
00:01:06,180 --> 00:01:13,360
control-shift-t would allow us to open up any class which is already defined as part of our application,
13

14
00:01:13,560 --> 00:01:14,920
or our dependencies.
14

15
00:01:14,920 --> 00:01:16,060
So all the JARS
15

16
00:01:16,060 --> 00:01:23,790
So I'll type in wsc, that brings up a class called web security configured to adopt it.
16

17
00:01:23,800 --> 00:01:25,480
The thing is that web security
17

18
00:01:25,540 --> 00:01:32,350
configurer adapter is the class which contains the default security country creation for spring
18

19
00:01:32,350 --> 00:01:33,700
security.
19

20
00:01:33,730 --> 00:01:40,270
There are a wide variety of methods which are present in here, which help us configure all the security
20

21
00:01:40,600 --> 00:01:48,280
that spring security is providing by default. The method which we are interested in is configure http security.
21

22
00:01:48,280 --> 00:01:54,940
So when you type in configure this is the method which is present in here. You can see that you can all
22

23
00:01:54,940 --> 00:02:02,590
right this meant that the configure specific HTTP security, you can see the default implementation of
23

24
00:02:02,590 --> 00:02:04,510
this specific comment as well.
24

25
00:02:04,720 --> 00:02:08,780
So what i'll do id i'll start with copying the default implementation of this method.
25

26
00:02:08,980 --> 00:02:16,210
And override this will solve our problems with options, as well as to disable something called
26

27
00:02:16,210 --> 00:02:25,410
CSRF. Now what I'll do id create a new class in the package .basic.
27

28
00:02:25,570 --> 00:02:33,940
So I said .basic.auth  package in which I'm creating it and I call this spring security configuration
28

29
00:02:34,050 --> 00:02:35,880
basic.
29

30
00:02:36,780 --> 00:02:44,530
And let's finish. What you want to do is we would want to extend WSC security configure configuration.
30

31
00:02:44,650 --> 00:02:50,240
So control space, and paste the method which we copied from earlier.
31

32
00:02:50,740 --> 00:02:55,150
Let's remove that.  Maximize so that we can see the entire screen.
32

33
00:02:55,210 --> 00:02:57,250
Let's remove this line of code.
33

34
00:02:57,280 --> 00:03:01,180
This configuration contains configuration right.
34

35
00:03:01,200 --> 00:03:08,760
So I'll say @Configuration, and lets enable spring security and it will spring actually enable
35

36
00:03:08,880 --> 00:03:10,300
web security.
36

37
00:03:10,300 --> 00:03:16,250
This is defined in as spring security to enable srping security configuration.
37

38
00:03:16,270 --> 00:03:21,380
So this is to enable spring configuration. so you can use the spring configuration. That's what we are telling
38

39
00:03:21,850 --> 00:03:26,360
by adding @configuration, and security configuration enables them to get it.
39

40
00:03:26,530 --> 00:03:33,220
You should tell that this configuration file has security configuration. So let's do that and it will
40

41
00:03:33,270 --> 00:03:38,620
bring security and now, we can go ahead and customize this.
41

42
00:03:38,620 --> 00:03:39,900
I'll add an @.
42

43
00:03:39,970 --> 00:03:41,360
All right.
43

44
00:03:41,380 --> 00:03:48,690
Annotation to say that we are actually overriding the method in a superclass. This is more of a convention,
44

45
00:03:48,820 --> 00:03:50,210
this is not really needed.
45

46
00:03:50,230 --> 00:03:56,200
One of the things I would start doing, is I don't really want to allow form login. So let's disable form
46

47
00:03:56,200 --> 00:04:03,250
login. And the other thing I would want to disable is CSRF. A CSRF would force our POST
47

48
00:04:03,520 --> 00:04:09,100
and PUT requests, they would need to start having something called a CSRF token. At a later point and
48

49
00:04:09,100 --> 00:04:12,290
then we'll be using JWT as authentication.
49

50
00:04:12,310 --> 00:04:19,230
So the option which was to prevent cross-site forgery is to use JWT tokens. We now use this sort of tokens
50

51
00:04:19,250 --> 00:04:20,590
to disable it.
51

52
00:04:20,590 --> 00:04:25,640
The other thing I would want to do is, I would want to have the pre flight request I would want to allow
52

53
00:04:25,730 --> 00:04:33,920
the pre-flight request to all the URLs. The pre-flight requests as we saw earlier is an options request. I'll say
53

54
00:04:34,070 --> 00:04:35,750
ant matchers.
54

55
00:04:35,960 --> 00:04:40,590
And here I would say actually HTTP options.
55

56
00:04:40,750 --> 00:04:42,730
So any options method
56

57
00:04:43,000 --> 00:04:49,720
any URL. How do you specify any URL? BY saying /** .
57

58
00:04:50,020 --> 00:04:55,750
So what I would want to do is put anything matching this. In any options request comes to any URL,
58

59
00:04:56,050 --> 00:04:57,020
what you would want to do?
59

60
00:04:57,040 --> 00:04:59,140
We would want to meet everybody.
60

61
00:04:59,170 --> 00:05:05,470
So we want to enable all the options requests without authentication, and all the other requests that we
61

62
00:05:05,740 --> 00:05:07,670
allow them to use.
62

63
00:05:07,830 --> 00:05:15,790
HTTP. What authentication does might look complex, but actually it's very simple. We disabled see CSRF, except
63

64
00:05:15,790 --> 00:05:23,860
for option's request to all URLS. authenticate all the other requests and use basic authentication.
64

65
00:05:23,870 --> 00:05:25,450
Let's save this file. In this step.
65

66
00:05:25,630 --> 00:05:33,170
We basically added in a little bit of spring security configuration, so we disabled CSRF, we allowed
66

67
00:05:33,210 --> 00:05:40,510
un-authenticated requests with options for all the URLs, and we just wanted to use his HTTP basic.
67

68
00:05:40,710 --> 00:05:41,520
I'll see you in the next step.
68

69
00:05:41,710 --> 00:05:41,920
Bye!

0
1
00:00:02,320 --> 00:00:06,360
Welcome back. In the previous step, we added spring security in.
1

2
00:00:06,470 --> 00:00:12,120
And we saw that we were able to check for form authentication and basic authentication.
2

3
00:00:12,130 --> 00:00:17,900
One of the problems that we had, is the password which is being used is a generated password. I would
3

4
00:00:17,900 --> 00:00:23,620
want to have a stable user id and password, that you would want to use across the application. In this
4

5
00:00:23,630 --> 00:00:26,810
step, lets configure a property ID and password.
5

6
00:00:26,930 --> 00:00:33,100
Easiest way you can configure a user id and password is by going in here and typing in security.
6

7
00:00:33,140 --> 00:00:40,650
spring security.user.name is equal to user, and spring security.user.password is equal
7

8
00:00:40,650 --> 00:00:48,230
to password. If you don't see this pop up which comes up when you type in the property value, in the application
8

9
00:00:48,240 --> 00:00:53,590
that properties, what you can do is install an eclipse plugin called spring IDE.
9

10
00:00:53,600 --> 00:00:57,810
So go ahead and search for spring IDE eclipse plugin, and make sure that you install that up.
10

11
00:00:58,050 --> 00:00:58,730
And remove this out.
11

12
00:00:58,730 --> 00:01:03,010
So the important properties are being that, it could do that to use that name, its good to use it and
12

13
00:01:03,020 --> 00:01:07,940
so spring security  user name and password is when the password is saved.
13

14
00:01:08,240 --> 00:01:12,560
And the application will be set to pick that up from now on.
14

15
00:01:12,620 --> 00:01:17,870
You can use this user id and password. You then use  password like kind of the default ones which I used. I
15

16
00:01:17,870 --> 00:01:22,290
would prefer to call them in28minutes and dummy.
16

17
00:01:22,440 --> 00:01:25,460
That means the user id password combination we have been using until now.
17

18
00:01:25,510 --> 00:01:26,840
And we're using that.
18

19
00:01:26,900 --> 00:01:37,680
And if you close the Chrome browser and relaunch it, and its type in localhost:8080/users ...
19

20
00:01:37,680 --> 00:01:40,870
in28minutes so I'm picking up one of the URLs
20

21
00:01:41,360 --> 00:01:44,480
user in28minutes todos.
21

22
00:01:44,750 --> 00:01:47,980
And when you type in, you would again be going to the login page.
22

23
00:01:47,990 --> 00:01:52,620
But now the ID and password that you need is in28minutes.
23

24
00:01:53,240 --> 00:01:57,970
So you can see that the password and the user id combination have been changed.
24

25
00:01:57,980 --> 00:02:04,190
Now we would have more control over it, if you close this browser and launch up the application. You would see
25

26
00:02:04,190 --> 00:02:10,130
that the basic authentication also, the same password would be used to create same user id password combination
26

27
00:02:10,130 --> 00:02:11,870
would be used. In this quick step,
27

28
00:02:11,890 --> 00:02:17,160
What we did is we standardize the user id and password that we would want to use. In the next step,
28

29
00:02:17,210 --> 00:02:20,920
lets start focusing on different game. I'll see you in the next step. Until then, bye!

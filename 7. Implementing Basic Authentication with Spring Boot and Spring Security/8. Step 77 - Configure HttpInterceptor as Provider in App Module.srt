0
1
00:00:02,180 --> 00:00:08,420
Welcome back. In the previous step,  we wrote the http interceptor. The http interceptor basdic auth service. 
1

2
00:00:09,030 --> 00:00:12,570
Let's configure it to be used in our module.
2

3
00:00:12,710 --> 00:00:15,850
Where is that module? app.module
3

4
00:00:16,110 --> 00:00:21,060
You know here you have to configure app for HTTP it.
4

5
00:00:21,200 --> 00:00:23,080
Let's look at how to do that right now.
5

6
00:00:23,360 --> 00:00:28,790
So I'll let you know to do is create an object, and provide a few attributes. The one which I would want
6

7
00:00:28,790 --> 00:00:37,640
to add in is provide http interceptors. So you can see that the next one which you would want to provide
7

8
00:00:37,850 --> 00:00:43,570
is the exact class. useCLASS  what is the class where we have defined the http interceptor?
8

9
00:00:43,710 --> 00:00:46,740
http interceptor
9

10
00:00:46,810 --> 00:00:55,770
Basic authentication service.  And the last one which we would want to configure is multi: true
10

11
00:00:55,780 --> 00:01:02,230
here it should be useClass. If you say that, you would see that this would compile it. So make sure that
11

12
00:01:02,230 --> 00:01:06,940
we are saving the http interceptor, and all the other files as well.
12

13
00:01:07,820 --> 00:01:12,670
If you go back, you'll see that the todos are coming back properly.
13

14
00:01:12,820 --> 00:01:20,580
You will see when I click update and make a change and say Save, if that it works fine and I'll be able
14

15
00:01:20,580 --> 00:01:21,660
to delete this.
15

16
00:01:21,810 --> 00:01:27,620
And I'll also be able to add a new todo there. learn Microservices, and save it in that todo.
16

17
00:01:27,660 --> 00:01:30,970
Now when I go to home, and go to todos, the get ready message.
17

18
00:01:31,080 --> 00:01:33,090
This also looks cool.
18

19
00:01:33,240 --> 00:01:36,420
Isn't there's a lot of fun in the last few steps.
19

20
00:01:36,780 --> 00:01:43,260
We have enable basic authentication in the backend, and we enhanced the Front-end application to make use
20

21
00:01:43,260 --> 00:01:44,020
of it.
21

22
00:01:44,400 --> 00:01:50,210
But the implementation that we have right now, is kind of a hard coded implementation on the fly, and
22

23
00:01:50,210 --> 00:01:57,240
then we have hardcoded in28minutes, and dummy as the password in a number of places, and that's not
23

24
00:01:57,240 --> 00:01:58,210
really good.
24

25
00:01:58,440 --> 00:02:01,340
And the other thing is the basic authentication.
25

26
00:02:01,350 --> 00:02:08,340
The login authentication of this Website ... dummy in28minutes, is also hardcoded authentication.
26

27
00:02:08,340 --> 00:02:13,710
Now how will I collect that information to the basic authentication in the back end? And that's what I
27

28
00:02:13,800 --> 00:02:15,910
would look at in the next step.
28

29
00:02:15,980 --> 00:02:16,450
Bye Bye!
